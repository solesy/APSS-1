#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<cassert>
using namespace std;
int c[201][20];
int n, m, price[20], pref[20];
//이번에 고려할 스시가 here
//현재 남은 예산이 budget 
//일 때, here부터 budget을 사용해서 얻을 수 있는 최대 선호도를 반환한다.
//here을 고르던가, 안고르던가
//sushi(budget,here)=max( sushi(budget-price[here],here) + pref[here], sushi(budget,here+1))
int sushi2() {
	int ret = 0;
	for (int budget = 1; budget <= m; ++budget) {
		//슬라이딩윈도: 1~200을 이용하여 얻은 값(201)을 0에 저장(0은 201부턴 필요없다)-> 2~0을 이용하여 얻은 값(202)을 1에 저장(1은 202부터 필요없다) ->...
		c[budget % 201][n - 1] = (budget / price[n - 1]) * pref[n - 1];
		int cand = 0;
		for (int here = n - 2; here >= 0; --here) {
			if (price[here] <= budget)//here을 고를 수 있을 경우
				c[budget % 201][here] = max(c[(budget - price[here]) % 201][here] + pref[here], c[budget % 201][here + 1]);
			else//here을 고를 수 없을 경우
				c[budget % 201][here] = cand;
			cand = max(cand, c[budget % 201][here]);//budget일 때 이때까지 고른 가장 큰 선호도.
		}
		ret = max(ret, cand);
	}
	return ret;
}
int main(void) {
	scanf("%d %d", &n, &m);
	m /= 100;
	for (int i = 0; i < n; ++i) {
		scanf("%d %d", &price[i], &pref[i]);
		price[i] /= 100;
	}
	printf("%d", sushi2());
}