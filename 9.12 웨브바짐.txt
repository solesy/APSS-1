#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<cassert>
using namespace std;
const int MOD = 1000000007;
//digits:e의 자릿수를 정렬
string e, digits;
//n<=14
int n, m;
int cache[1 << 14][20][2];
//과거 가격을 앞 자리부터 채워나가고 있다.
//index: 이번에 채울 자리의 인덱스
//taken: 지금까지 사용한 자릿수들의 집합
//mod: 지금까지 만든 가격의 m에 대한 나머지
//less: 지금까지 만든 가격이 이미 e보다 작으면 1, 아니면 0
int price(int index, int taken, int mod, int less) {
	//기저
	if (index == n)
		return (less && (mod == 0)) ? 1 : 0;
	int& ret = cache[taken][mod][less];
	if (ret != -1) return ret;
	ret = 0;
	for (int next = 0; next < n; ++next) {
		//taken[i]==false
		if (taken & (1 << next) == 0) {
			//앞자리는 e와 같았지만 이번자리에서 e보다 커지는 경우
			if (!less && e[index] < digits[next])
				continue;
			//중복된것이 있는 순열
			if (next != 0 && digits[next - 1] == digits[next] && (taken & (1 << (next - 1))) == 0)
				continue;
			//taken[next]=true
			int nextTaken = taken | (1 << next);
			int nextMod = (10 * mod + (digits[next] - '0')) % m;
			int nextLess = less || e[index] > digits[next];
			ret += price(index + 1, nextTaken, nextMod, nextLess);
			ret %= MOD;
		}
	}
	return ret;
}